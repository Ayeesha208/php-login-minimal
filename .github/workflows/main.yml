name: PHP App CI/CD for Azure VM

on:
  push:
    branches:
      - master

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: PHP Syntax Check
      run: |
        echo "🔍 Running PHP syntax checks..."
        find . -type f -name "*.php" -exec php -l {} \;


    - name: Create ZIP Artifact
      run: |
        echo "📦 Creating ZIP build artifact..."
        zip -r php-login-build.zip . -x "*.git*" "*.github*"

    - name: Upload to JFrog Artifactory
      run: |
        echo "⬆️ Uploading to JFrog Artifactory..."
        curl -H "X-JFrog-Art-Api: ${{ secrets.ARTIFACTORY_API_KEY }}" \
             -T php-login-build.zip \
             "${{ secrets.ARTIFACTORY_URL }}/${{ secrets.ARTIFACTORY_REPO }}/php-login/php-login-build-${{ github.run_number }}.zip"

    - name: SCP ZIP to Azure VM
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: "php-login-build.zip"
        target: "~/"

    - name: SSH Deploy ZIP to Web Directory with Apache Setup
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          echo "🛠️ Installing Apache if not present..."
          if ! command -v apache2 > /dev/null; then
            sudo apt update
            sudo apt install apache2 -y
          fi
          
          echo "🔄 Restarting Apache..."
          sudo systemctl enable apache2
          sudo systemctl restart apache2

          echo "📂 Creating deployment directory..."
          sudo mkdir -p /var/www/html/php-login

          echo "📦 Unzipping build artifact..."
          sudo unzip -o ~/php-login-build.zip -d /var/www/html/php-login

          echo "🔒 Setting permissions..."
          sudo chown -R www-data:www-data /var/www/html/php-login

          echo "🧹 Cleaning up..."
          rm ~/php-login-build.zip

          echo "✅ Apache is up and deployment completed."

    - name: Wait for Apache to start
      run: |
        echo "⏳ Waiting for web server to stabilize..."
        sleep 10

    - name: Smoke Test (Check Application)
      run: |
        echo "🌐 Running smoke test..."
        curl --fail --retry 5 --retry-delay 3 http://${{ secrets.SERVER_IP }}/php-login || exit 1
